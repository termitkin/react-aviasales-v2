// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxContainer component Matches the snapshot 1`] = `
.emotion-4 {
  width: 290px;
  height: 36px;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  outline: none;
}

@media (min-width:960px) {
  .emotion-4 {
    width: 232px;
  }
}

.emotion-4:hover {
  background-color: #f1fcff;
}

.emotion-4:hover .emotion-11 {
  display: table-cell;
  background-color: #f1fcff;
}

.emotion-0 {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.emotion-0:checked + .emotion-3::before {
  border: 1px solid #2196f3;
  background-image: url(check.svg);
  background-position: center center;
  background-repeat: no-repeat;
}

.emotion-0:focus + .emotion-3::before {
  border: 3px solid #2196f3;
}

.emotion-2 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  font-family: Open Sans,sans-serif;
  font-weight: normal;
  font-size: 0.8125rem;
  line-height: 35px;
  color: #4a4a4a;
}

.emotion-2::before {
  content: "";
  display: inline-block;
  width: 19px;
  height: 19px;
  border: 1px solid #d2d5d6;
  border-radius: 3px;
  box-sizing: border-box;
  margin-right: 10px;
}

.emotion-10 {
  width: 49px;
  background-color: transparent;
  border: none;
  margin-left: auto;
  font-family: Open Sans,sans-serif;
  font-weight: 600;
  font-size: 0.6875rem;
  line-height: 35px;
  -webkit-letter-spacing: 0.5px;
  -moz-letter-spacing: 0.5px;
  -ms-letter-spacing: 0.5px;
  letter-spacing: 0.5px;
  color: #2196f3;
  text-transform: uppercase;
  display: none;
  cursor: pointer;
  padding: 0;
}

.emotion-10:hover,
.emotion-10:focus {
  color: #ff9d1b;
}

<div>
  <div
    className="emotion-4 emotion-5"
    tabIndex="-1"
  >
    <input
      checked={true}
      className="emotion-0 emotion-1"
      id="checkbox0"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="emotion-2 emotion-3"
      htmlFor="checkbox0"
    >
      Все
    </label>
    
  </div>
  <div
    className="emotion-4 emotion-5"
    tabIndex="-1"
  >
    <input
      checked={true}
      className="emotion-0 emotion-1"
      id="checkbox1"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="emotion-2 emotion-3"
      htmlFor="checkbox1"
    >
      Без пересадок
    </label>
    <button
      className="emotion-10 emotion-11"
      onClick={[Function]}
    >
      только
    </button>
  </div>
  <div
    className="emotion-4 emotion-5"
    tabIndex="-1"
  >
    <input
      checked={true}
      className="emotion-0 emotion-1"
      id="checkbox2"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="emotion-2 emotion-3"
      htmlFor="checkbox2"
    >
      1 пересадка
    </label>
    <button
      className="emotion-10 emotion-11"
      onClick={[Function]}
    >
      только
    </button>
  </div>
  <div
    className="emotion-4 emotion-5"
    tabIndex="-1"
  >
    <input
      checked={true}
      className="emotion-0 emotion-1"
      id="checkbox3"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="emotion-2 emotion-3"
      htmlFor="checkbox3"
    >
      2 пересадки
    </label>
    <button
      className="emotion-10 emotion-11"
      onClick={[Function]}
    >
      только
    </button>
  </div>
  <div
    className="emotion-4 emotion-5"
    tabIndex="-1"
  >
    <input
      checked={true}
      className="emotion-0 emotion-1"
      id="checkbox4"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="emotion-2 emotion-3"
      htmlFor="checkbox4"
    >
      3 пересадки
    </label>
    <button
      className="emotion-10 emotion-11"
      onClick={[Function]}
    >
      только
    </button>
  </div>
</div>
`;
